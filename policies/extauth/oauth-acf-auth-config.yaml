apiVersion: enterprise.gloo.solo.io/v1
kind: AuthConfig
metadata:
  name: oauth-acf-auth
  namespace: gloo-system
spec:
  configs:
    - name: keycloak_oidc
      oauth2:
        oidcAuthorizationCode:
          # afterLogoutUrl: http://www.google.com
          appUrl: http://api.example.com:8080
          autoMapFromMetadata:
            namespace: solo_authconfig_oidc
          callbackPath: /callback
          clientId: webapp-client
          clientSecretRef:
            name: oauth
            namespace: gloo-system
          frontChannelLogout:
           path: /fc_logout
          headers:
            accessTokenHeader: access_token
            idTokenHeader: id_token
            useBearerSchemaForAuthorization: true
          issuerUrl: http://keycloak.example.com:8080/realms/master/
          logoutPath: /logout
          scopes:
            - email
          session:
            # Needed since we run on http instead of https in this demo. Without this, we'll end up in a redirect loop as no cookies are set on the client ...
            cookieOptions:
              notSecure: true
              # Expire the session cookie after a minute, forcing a re-login
              # maxAge: 30
            # Store the id_token and access_token in Redis, and only sent session ID back to the client.
            failOnFetchFailure: true
            redis:
              allowRefreshing: true
              cookieName: oidc-session
              headerName: oidc-session
              options:
                host: redis.gloo-system.svc.cluster.local:6379
              preExpiryBuffer: 2s
